# DO NOT MODIFY. This was automatically generated by sbt-bazel.
rules_scala_version = '3b9ab9be31ac217d3337c709cb6bfeb89c8dcbb1'
http_archive(
  name = 'io_bazel_rules_scala',
  url = 'https://github.com/bazelbuild/rules_scala/archive/%s.zip' % rules_scala_version,
  type = 'zip',
  strip_prefix = 'rules_scala-%s' % rules_scala_version
)
load(
  '@io_bazel_rules_scala//scala:scala.bzl',
  'scala_repositories'
)
scala_repositories()
load("@io_bazel_rules_scala//scala_proto:scala_proto.bzl", "scala_proto_repositories")
scala_proto_repositories()
http_archive(
    name = "rules_antlr",
    sha256 = "acd2a25f31aeeea5f58cdb434ae109d03826ae7cc11fe9efce1740102e3f4531",
    strip_prefix = "rules_antlr-0.1.0",
    urls = ["https://github.com/marcohu/rules_antlr/archive/0.1.0.tar.gz"],
)
load("@rules_antlr//antlr:deps.bzl", "antlr_dependencies")
antlr_dependencies(4)
# proto_library, cc_proto_library, and java_proto_library rules implicitly
# depend on @com_google_protobuf for protoc and proto runtimes.
# This statement defines the @com_google_protobuf repo.
http_archive(
    name = "com_google_protobuf",
    sha256 = "cef7f1b5a7c5fba672bec2a319246e8feba471f04dcebfe362d55930ee7c1c30",
    strip_prefix = "protobuf-3.5.0",
    urls = ["https://github.com/google/protobuf/archive/v3.5.0.zip"],
)

# java_lite_proto_library rules implicitly depend on @com_google_protobuf_javalite//:javalite_toolchain,
# which is the JavaLite proto runtime (base classes and common utilities).
http_archive(
    name = "com_google_protobuf_javalite",
    sha256 = "d8a2fed3708781196f92e1e7e7e713cf66804bd2944894401057214aff4f468e",
    strip_prefix = "protobuf-5e8916e881c573c5d83980197a6f783c132d4276",
    urls = ["https://github.com/google/protobuf/archive/5e8916e881c573c5d83980197a6f783c132d4276.zip"],
)
load(
  '@io_bazel_rules_scala//scala:toolchains.bzl',
  'scala_register_toolchains'
)
scala_register_toolchains()
load(
  '@io_bazel_rules_scala//scala:scala_maven_import_external.bzl',
  'scala_maven_import_external'
)
maven_jar(
    name = "scala_test_maven",
    artifact = "org.scalatest:scalatest_2.12:3.0.1",
)
bind(
  name = "scala_test",
  actual = "@scala_test_maven//jar"
)
scala_maven_import_external(
  name = 'com_github_javaparser_javaparser_core',
  artifact = 'com.github.javaparser:javaparser-core:3.4.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/github/javaparser/javaparser_core',
  actual = '@com_github_javaparser_javaparser_core//jar'
)
scala_maven_import_external(
  name = 'com_google_api_grpc_proto_google_common_protos',
  artifact = 'com.google.api.grpc:proto-google-common-protos:1.0.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/api/grpc/proto_google_common_protos',
  actual = '@com_google_api_grpc_proto_google_common_protos//jar'
)
scala_maven_import_external(
  name = 'com_google_code_findbugs_jsr305',
  artifact = 'com.google.code.findbugs:jsr305:3.0.2',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/code/findbugs/jsr305',
  actual = '@com_google_code_findbugs_jsr305//jar'
)
scala_maven_import_external(
  name = 'com_google_code_gson_gson',
  artifact = 'com.google.code.gson:gson:2.7',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/code/gson/gson',
  actual = '@com_google_code_gson_gson//jar'
)
scala_maven_import_external(
  name = 'com_google_errorprone_error_prone_annotations',
  artifact = 'com.google.errorprone:error_prone_annotations:2.1.2',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/errorprone/error_prone_annotations',
  actual = '@com_google_errorprone_error_prone_annotations//jar'
)
scala_maven_import_external(
  name = 'com_google_guava_guava',
  artifact = 'com.google.guava:guava:20.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/guava/guava',
  actual = '@com_google_guava_guava//jar'
)
scala_maven_import_external(
  name = 'com_google_protobuf_protobuf_java',
  artifact = 'com.google.protobuf:protobuf-java:3.5.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/protobuf/protobuf_java',
  actual = '@com_google_protobuf_protobuf_java//jar'
)
scala_maven_import_external(
  name = 'com_google_protobuf_protobuf_java_util',
  artifact = 'com.google.protobuf:protobuf-java-util:3.5.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/google/protobuf/protobuf_java_util',
  actual = '@com_google_protobuf_protobuf_java_util//jar'
)
scala_maven_import_external(
  name = 'com_lihaoyi_fastparse_utils_2_12',
  artifact = 'com.lihaoyi:fastparse-utils_2.12:1.0.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/lihaoyi/fastparse_utils_2_12',
  actual = '@com_lihaoyi_fastparse_utils_2_12//jar'
)
scala_maven_import_external(
  name = 'com_lihaoyi_fastparse_2_12',
  artifact = 'com.lihaoyi:fastparse_2.12:1.0.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/lihaoyi/fastparse_2_12',
  actual = '@com_lihaoyi_fastparse_2_12//jar'
)
scala_maven_import_external(
  name = 'com_lihaoyi_sourcecode_2_12',
  artifact = 'com.lihaoyi:sourcecode_2.12:0.1.4',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/lihaoyi/sourcecode_2_12',
  actual = '@com_lihaoyi_sourcecode_2_12//jar'
)
scala_maven_import_external(
  name = 'com_thesamet_scalapb_lenses_2_12',
  artifact = 'com.thesamet.scalapb:lenses_2.12:0.7.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/thesamet/scalapb/lenses_2_12',
  actual = '@com_thesamet_scalapb_lenses_2_12//jar'
)
scala_maven_import_external(
  name = 'com_thesamet_scalapb_scalapb_runtime_grpc_2_12',
  artifact = 'com.thesamet.scalapb:scalapb-runtime-grpc_2.12:0.7.4',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/thesamet/scalapb/scalapb_runtime_grpc_2_12',
  actual = '@com_thesamet_scalapb_scalapb_runtime_grpc_2_12//jar'
)
scala_maven_import_external(
  name = 'com_thesamet_scalapb_scalapb_runtime_2_12',
  artifact = 'com.thesamet.scalapb:scalapb-runtime_2.12:0.7.4',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/thesamet/scalapb/scalapb_runtime_2_12',
  actual = '@com_thesamet_scalapb_scalapb_runtime_2_12//jar'
)
scala_maven_import_external(
  name = 'com_thoughtworks_paranamer_paranamer',
  artifact = 'com.thoughtworks.paranamer:paranamer:2.8',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/thoughtworks/paranamer/paranamer',
  actual = '@com_thoughtworks_paranamer_paranamer//jar'
)
scala_maven_import_external(
  name = 'com_typesafe_config',
  artifact = 'com.typesafe:config:1.3.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/typesafe/config',
  actual = '@com_typesafe_config//jar'
)
scala_maven_import_external(
  name = 'com_typesafe_akka_akka_actor_2_12',
  artifact = 'com.typesafe.akka:akka-actor_2.12:2.4.17',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/com/typesafe/akka/akka_actor_2_12',
  actual = '@com_typesafe_akka_akka_actor_2_12//jar'
)
scala_maven_import_external(
  name = 'commons_cli_commons_cli',
  artifact = 'commons-cli:commons-cli:1.3.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/commons/cli/commons_cli',
  actual = '@commons_cli_commons_cli//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_context',
  artifact = 'io.grpc:grpc-context:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_context',
  actual = '@io_grpc_grpc_context//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_core',
  artifact = 'io.grpc:grpc-core:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_core',
  actual = '@io_grpc_grpc_core//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_netty',
  artifact = 'io.grpc:grpc-netty:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_netty',
  actual = '@io_grpc_grpc_netty//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_protobuf',
  artifact = 'io.grpc:grpc-protobuf:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_protobuf',
  actual = '@io_grpc_grpc_protobuf//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_protobuf_lite',
  artifact = 'io.grpc:grpc-protobuf-lite:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_protobuf_lite',
  actual = '@io_grpc_grpc_protobuf_lite//jar'
)
scala_maven_import_external(
  name = 'io_grpc_grpc_stub',
  artifact = 'io.grpc:grpc-stub:1.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/grpc/grpc_stub',
  actual = '@io_grpc_grpc_stub//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_buffer',
  artifact = 'io.netty:netty-buffer:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_buffer',
  actual = '@io_netty_netty_buffer//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_codec',
  artifact = 'io.netty:netty-codec:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_codec',
  actual = '@io_netty_netty_codec//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_codec_http',
  artifact = 'io.netty:netty-codec-http:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_codec_http',
  actual = '@io_netty_netty_codec_http//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_codec_http2',
  artifact = 'io.netty:netty-codec-http2:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_codec_http2',
  actual = '@io_netty_netty_codec_http2//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_codec_socks',
  artifact = 'io.netty:netty-codec-socks:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_codec_socks',
  actual = '@io_netty_netty_codec_socks//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_common',
  artifact = 'io.netty:netty-common:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_common',
  actual = '@io_netty_netty_common//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_handler',
  artifact = 'io.netty:netty-handler:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_handler',
  actual = '@io_netty_netty_handler//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_handler_proxy',
  artifact = 'io.netty:netty-handler-proxy:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_handler_proxy',
  actual = '@io_netty_netty_handler_proxy//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_resolver',
  artifact = 'io.netty:netty-resolver:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_resolver',
  actual = '@io_netty_netty_resolver//jar'
)
scala_maven_import_external(
  name = 'io_netty_netty_transport',
  artifact = 'io.netty:netty-transport:4.1.22.Final',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/netty/netty_transport',
  actual = '@io_netty_netty_transport//jar'
)
scala_maven_import_external(
  name = 'io_opencensus_opencensus_api',
  artifact = 'io.opencensus:opencensus-api:0.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/opencensus/opencensus_api',
  actual = '@io_opencensus_opencensus_api//jar'
)
scala_maven_import_external(
  name = 'io_opencensus_opencensus_contrib_grpc_metrics',
  artifact = 'io.opencensus:opencensus-contrib-grpc-metrics:0.11.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/io/opencensus/opencensus_contrib_grpc_metrics',
  actual = '@io_opencensus_opencensus_contrib_grpc_metrics//jar'
)
scala_maven_import_external(
  name = 'jgraph_jgraph',
  artifact = 'jgraph:jgraph:5.13.0.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/jgraph/jgraph',
  actual = '@jgraph_jgraph//jar'
)
scala_maven_import_external(
  name = 'joda_time_joda_time',
  artifact = 'joda-time:joda-time:2.9.5',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/joda/time/joda_time',
  actual = '@joda_time_joda_time//jar'
)
scala_maven_import_external(
  name = 'org_antlr_ST4',
  artifact = 'org.antlr:ST4:4.0.8',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/antlr/ST4',
  actual = '@org_antlr_ST4//jar'
)
scala_maven_import_external(
  name = 'org_antlr_antlr_runtime',
  artifact = 'org.antlr:antlr-runtime:3.5.2',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/antlr/antlr_runtime',
  actual = '@org_antlr_antlr_runtime//jar'
)
scala_maven_import_external(
  name = 'org_antlr_antlr4_runtime',
  artifact = 'org.antlr:antlr4-runtime:4.7',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/antlr/antlr4_runtime',
  actual = '@org_antlr_antlr4_runtime//jar'
)
scala_maven_import_external(
  name = 'org_apache_commons_commons_lang3',
  artifact = 'org.apache.commons:commons-lang3:3.5',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/apache/commons/commons_lang3',
  actual = '@org_apache_commons_commons_lang3//jar'
)
scala_maven_import_external(
  name = 'org_ini4j_ini4j',
  artifact = 'org.ini4j:ini4j:0.5.4',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/ini4j/ini4j',
  actual = '@org_ini4j_ini4j//jar'
)
scala_maven_import_external(
  name = 'org_jgrapht_jgrapht_core',
  artifact = 'org.jgrapht:jgrapht-core:1.0.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/jgrapht/jgrapht_core',
  actual = '@org_jgrapht_jgrapht_core//jar'
)
scala_maven_import_external(
  name = 'org_jgrapht_jgrapht_ext',
  artifact = 'org.jgrapht:jgrapht-ext:1.0.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/jgrapht/jgrapht_ext',
  actual = '@org_jgrapht_jgrapht_ext//jar'
)
scala_maven_import_external(
  name = 'org_joda_joda_convert',
  artifact = 'org.joda:joda-convert:1.8.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/joda/joda_convert',
  actual = '@org_joda_joda_convert//jar'
)
scala_maven_import_external(
  name = 'org_json4s_json4s_ast_2_12',
  artifact = 'org.json4s:json4s-ast_2.12:3.5.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/json4s/json4s_ast_2_12',
  actual = '@org_json4s_json4s_ast_2_12//jar'
)
scala_maven_import_external(
  name = 'org_json4s_json4s_core_2_12',
  artifact = 'org.json4s:json4s-core_2.12:3.5.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/json4s/json4s_core_2_12',
  actual = '@org_json4s_json4s_core_2_12//jar'
)
scala_maven_import_external(
  name = 'org_json4s_json4s_ext_2_12',
  artifact = 'org.json4s:json4s-ext_2.12:3.5.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/json4s/json4s_ext_2_12',
  actual = '@org_json4s_json4s_ext_2_12//jar'
)
scala_maven_import_external(
  name = 'org_json4s_json4s_native_2_12',
  artifact = 'org.json4s:json4s-native_2.12:3.5.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/json4s/json4s_native_2_12',
  actual = '@org_json4s_json4s_native_2_12//jar'
)
scala_maven_import_external(
  name = 'org_json4s_json4s_scalap_2_12',
  artifact = 'org.json4s:json4s-scalap_2.12:3.5.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/json4s/json4s_scalap_2_12',
  actual = '@org_json4s_json4s_scalap_2_12//jar'
)
scala_maven_import_external(
  name = 'org_ow2_asm_asm_all',
  artifact = 'org.ow2.asm:asm-all:5.2',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/ow2/asm/asm_all',
  actual = '@org_ow2_asm_asm_all//jar'
)
scala_maven_import_external(
  name = 'org_scala_lang_scala_compiler',
  artifact = 'org.scala-lang:scala-compiler:2.12.6',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/scala/lang/scala_compiler',
  actual = '@org_scala_lang_scala_compiler//jar'
)
scala_maven_import_external(
  name = 'org_scala_lang_scala_reflect',
  artifact = 'org.scala-lang:scala-reflect:2.12.6',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/scala/lang/scala_reflect',
  actual = '@org_scala_lang_scala_reflect//jar'
)
scala_maven_import_external(
  name = 'org_scala_lang_modules_scala_java8_compat_2_12',
  artifact = 'org.scala-lang.modules:scala-java8-compat_2.12:0.8.0',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/scala/lang/modules/scala_java8_compat_2_12',
  actual = '@org_scala_lang_modules_scala_java8_compat_2_12//jar'
)
scala_maven_import_external(
  name = 'org_scala_lang_modules_scala_xml_2_12',
  artifact = 'org.scala-lang.modules:scala-xml_2.12:1.0.6',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/scala/lang/modules/scala_xml_2_12',
  actual = '@org_scala_lang_modules_scala_xml_2_12//jar'
)
scala_maven_import_external(
  name = 'org_tinyjee_jgraphx_jgraphx',
  artifact = 'org.tinyjee.jgraphx:jgraphx:2.0.0.1',
  licenses = [],
  server_urls = [
    'https://repo1.maven.org/maven2/',
  ]
)
bind(
  name = 'jar/org/tinyjee/jgraphx/jgraphx',
  actual = '@org_tinyjee_jgraphx_jgraphx//jar'
)

git_repository(
    name = "io_bazel_rules_python",
    remote = "https://github.com/bazelbuild/rules_python.git",
    commit = "d6fbb0fb2a5c8e318dd4de5104dc41358cefaa90",
)


http_file(
    name = "angr_7_8_8_1_whl",
    sha256 = "11924a0d7a31cb983c712441ca3a96400211371df95e837039d41885db45d06c",
    url = ('https://files.pythonhosted.org/packages/51/0f/' +
           '0589e802397c259e1e8a93d03b6206f9da4f1d9ac613deb7865d47b040ee/' +
           'angr-7.8.8.1-py2-none-manylinux1_x86_64.whl'),
)

# Only needed for PIP support:
load("@io_bazel_rules_python//python:pip.bzl", "pip_repositories")

pip_repositories()

load("@io_bazel_rules_python//python:pip.bzl", "pip_import")

# This rule translates the specified requirements.txt into
# @my_deps//:requirements.bzl, which itself exposes a pip_install method.
pip_import(
   name = "nativedroid_deps",
   requirements = "//nativedroid:requirements.txt",
)

# Load the pip_install symbol for nativedroid_deps, and create the dependencies'
# repositories.
load("@nativedroid_deps//:requirements.bzl", _nativedrpod_install = "pip_install")
_nativedrpod_install()